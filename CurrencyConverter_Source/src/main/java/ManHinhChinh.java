
import java.awt.Color;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HIEU
 */
public class ManHinhChinh extends javax.swing.JFrame {

    /**
     * Creates new form ManHinhChinh
     */
    public ManHinhChinh() {
        this.getContentPane().setBackground(Color.WHITE);
        
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jComboBoxFrom = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxTo = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldNhap = new javax.swing.JTextField();
        jTextFieldXuat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonChuyen = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItemFullScreen = new javax.swing.JMenuItem();
        jMenuItemFullScreenExit = new javax.swing.JMenuItem();
        jMenuAbout = new javax.swing.JMenu();
        jMenuItemAuthor = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenuItem1.setText("jMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu5.setText("File");
        jMenuBar2.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar2.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chuyển Đổi Tiền Tệ v1.0");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(15, 15, 62));

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setIcon(new javax.swing.ImageIcon("C:\\Users\\HIEU\\Desktop\\OOP\\THchuong2\\ChuyenDoiTienTe\\src\\main\\java\\com\\mycompany\\chuyendoitiente\\images\\baseline_euro_white_18.png")); // NOI18N
        jLabelTitle.setText("Chuyển Đổi Tiền Tệ");

        jComboBoxFrom.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jComboBoxFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Việt Nam Đồng (VND)", "Đô La Mỹ (USD)", "Đô La Singapore (SGD)", "Euro (EUR)", "Bảng Anh (GBP)", "Yên Nhật (JPY)", "Won Hàn Quốc (KRW)", "Nhân Dân Tệ (CNY)", "Bạt Thái (THB)" }));
        jComboBoxFrom.setBorder(null);
        jComboBoxFrom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBoxFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFromActionPerformed(evt);
            }
        });
        jComboBoxFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxFromKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\HIEU\\Desktop\\OOP\\THchuong2\\ChuyenDoiTienTe\\src\\main\\java\\com\\mycompany\\chuyendoitiente\\images\\baseline_trending_flat_white_24.png")); // NOI18N

        jComboBoxTo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jComboBoxTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Việt Nam Đồng (VND)", "Đô La Mỹ (USD)", "Đô La Singapore (SGD)", "Euro (EUR)", "Bảng Anh (GBP)", "Yên Nhật (JPY)", "Won Hàn Quốc (KRW)", "Nhân Dân Tệ (CNY)", "Bạt Thái (THB)" }));
        jComboBoxTo.setBorder(null);
        jComboBoxTo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jComboBoxFrom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addGap(98, 98, 98))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jComboBoxTo, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTextFieldNhap.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(15, 15, 62), 2, true));
        jTextFieldNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNhapActionPerformed(evt);
            }
        });

        jTextFieldXuat.setEditable(false);
        jTextFieldXuat.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(15, 15, 62), 2, true));
        jTextFieldXuat.setDisabledTextColor(new java.awt.Color(250, 250, 250));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hãy Nhập Số Tiền");

        jButtonChuyen.setBackground(new java.awt.Color(15, 15, 62));
        jButtonChuyen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonChuyen.setForeground(new java.awt.Color(255, 255, 255));
        jButtonChuyen.setText("Chuyển");
        jButtonChuyen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonChuyen.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonChuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChuyenActionPerformed(evt);
            }
        });
        jButtonChuyen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonChuyenKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setText("Kết Quả");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("v1.0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldNhap, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldXuat, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jButtonChuyen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(168, 168, 168))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jButtonChuyen, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldXuat, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(57, 57, 57)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(null);
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenu3.setBackground(new java.awt.Color(255, 255, 255));
        jMenu3.setBorder(null);
        jMenu3.setText("File");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemExit.setIcon(new javax.swing.ImageIcon("C:\\Users\\HIEU\\Desktop\\OOP\\THchuong2\\ChuyenDoiTienTe\\src\\main\\java\\com\\mycompany\\chuyendoitiente\\images\\outline_cancel_black_18.png")); // NOI18N
        jMenuItemExit.setText("Exit ");
        jMenuItemExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItemExit);

        jMenuBar1.add(jMenu3);

        jMenu7.setBackground(new java.awt.Color(255, 255, 255));
        jMenu7.setBorder(null);
        jMenu7.setText("View");
        jMenu7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItemFullScreen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        jMenuItemFullScreen.setIcon(new javax.swing.ImageIcon("C:\\Users\\HIEU\\Desktop\\OOP\\THchuong2\\ChuyenDoiTienTe\\src\\main\\java\\com\\mycompany\\chuyendoitiente\\images\\outline_fullscreen_black_18.png")); // NOI18N
        jMenuItemFullScreen.setText("Full Screen");
        jMenuItemFullScreen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemFullScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFullScreenActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItemFullScreen);

        jMenuItemFullScreenExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItemFullScreenExit.setIcon(new javax.swing.ImageIcon("C:\\Users\\HIEU\\Desktop\\OOP\\THchuong2\\ChuyenDoiTienTe\\src\\main\\java\\com\\mycompany\\chuyendoitiente\\images\\outline_fullscreen_exit_black_18.png")); // NOI18N
        jMenuItemFullScreenExit.setText("Minimize");
        jMenuItemFullScreenExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemFullScreenExit.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jMenuItemFullScreenExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFullScreenExitActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItemFullScreenExit);

        jMenuBar1.add(jMenu7);

        jMenuAbout.setBackground(new java.awt.Color(255, 255, 255));
        jMenuAbout.setText("About");
        jMenuAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAboutActionPerformed(evt);
            }
        });

        jMenuItemAuthor.setText("Author");
        jMenuItemAuthor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItemAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAuthorActionPerformed(evt);
            }
        });
        jMenuAbout.add(jMenuItemAuthor);

        jMenuBar1.add(jMenuAbout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxFromKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxFromKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFromKeyPressed

    private void jComboBoxFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFromActionPerformed
       
    }//GEN-LAST:event_jComboBoxFromActionPerformed
    //Button Chuyển đổi đơn vị (Main)
    private void jButtonChuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChuyenActionPerformed
        double Input = Double.parseDouble(jTextFieldNhap.getText());
        double Output;
        
        //VND to USD
        if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (0.000043);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (0.000057);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (0.000036);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.000031);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (0.0047);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (0.048);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (0.00028);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //VND to THB
        else if(jComboBoxFrom.getSelectedItem() == "Việt Nam Đồng (VND)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (0.0013);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //USD to VND
        if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (23169.81);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (1.33);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (0.83);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.72);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (109.30);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (1117.76);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (6.47);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //USD to THB
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Mỹ (USD)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (31.14);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //SGD to VND
        if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (17409.52);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to USD
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (0.75);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (0.63);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.54);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (82.13);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (839.87);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (4.86);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //SGD to THB
        else if(jComboBoxFrom.getSelectedItem() == "Đô La Singapore (SGD)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (23.4);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //EUR to VND
        if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (27850.00);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to USD
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (1.20);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (1.60);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.87);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (131.38);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (1343.54);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (7.78);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //EUR to THB
        else if(jComboBoxFrom.getSelectedItem() == "Euro (EUR)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (37.43);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //GBP to VND
        if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (32012.57);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to USD
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (1.38);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (1.84);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (1.15);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (151.02);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (1544.35);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (8.95);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //GBP to THB
        else if(jComboBoxFrom.getSelectedItem() == "Bảng Anh (GBP)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (43.02);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //JPY to VND
        if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (212.01);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to USD
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (0.0092);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (0.012);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (0.0076);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.0066);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (10.23);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (0.059);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //JPY to THB
        else if(jComboBoxFrom.getSelectedItem() == "Yên Nhật (JPY)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (0.28);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //KRW to VND
        if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (20.73);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to USD
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (0.00089);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (0.0012);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
               Output = Input * (0.00074);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
               Output = Input * (0.00065);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
               Output = Input * (0.098);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
               Output = Input * (0.0058);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //KRW to THB
        else if(jComboBoxFrom.getSelectedItem() == "Won Hàn Quốc (KRW)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
               Output = Input * (0.028);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //CNY to VND
        if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (3578.63);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to USD
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (0.15);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (0.21);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (0.13);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.11);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (16.88);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (172.64);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //CNY to THB
        else if(jComboBoxFrom.getSelectedItem() == "Nhân Dân Tệ (CNY)"
            && jComboBoxTo.getSelectedItem() == "Bạt Thái (THB)"){
            Output = Input * (4.81);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        
        //THB to VND
        if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Việt Nam Đồng (VND)"){
            Output = Input * (744.05);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to USD
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Đô La Mỹ (USD)"){
            Output = Input * (0.032);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to SGD
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Đô La Singapore (SGD)"){
            Output = Input * (0.043);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to EUR
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Euro (EUR)"){
            Output = Input * (0.027);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to GBP
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Bảng Anh (GBP)"){
            Output = Input * (0.023);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to JPY
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Yên Nhật (JPY)"){
            Output = Input * (3.51);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to KRW
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Won Hàn Quốc (KRW)"){
            Output = Input * (35.89);
            jTextFieldXuat.setText(Double.toString(Output));
        }
        //THB to CNY
        else if(jComboBoxFrom.getSelectedItem() == "Bạt Thái (THB)"
            && jComboBoxTo.getSelectedItem() == "Nhân Dân Tệ (CNY)"){
            Output = Input * (0.21);
            jTextFieldXuat.setText(Double.toString(Output));
        }
    }//GEN-LAST:event_jButtonChuyenActionPerformed

    private void jTextFieldNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNhapActionPerformed

    }//GEN-LAST:event_jTextFieldNhapActionPerformed
    //JMenuItemExit
    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed
    //JMenuItemMinimumSize
    private void jMenuItemFullScreenExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFullScreenExitActionPerformed
        this.setExtendedState(ManHinhChinh.ICONIFIED);
    }//GEN-LAST:event_jMenuItemFullScreenExitActionPerformed
    //JMenuItemMaximumSize
    private void jMenuItemFullScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFullScreenActionPerformed
        if(this.getExtendedState() != ManHinhChinh.MAXIMIZED_BOTH){
            this.setExtendedState(ManHinhChinh.MAXIMIZED_BOTH);
        }
        else{
            this.setExtendedState(ManHinhChinh.MAXIMIZED_BOTH);
        }
        //Nếu (Lấy ra độ dài & rộng màn hình KHÁC Dài Max và Rộng Max)
        //Thì Set màn hình về MAX
        //Nếu không thì khi màn hình đã ở MAX vẫn tiếp tục MAX
    }//GEN-LAST:event_jMenuItemFullScreenActionPerformed
    private void jMenuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAboutActionPerformed

    }//GEN-LAST:event_jMenuAboutActionPerformed
    //JMenuItemAboutAuthor (Show Dialog)
    private void jMenuItemAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAuthorActionPerformed
        JOptionPane.showMessageDialog(this, "Chuyển Đổi Tiền Tệ\nVersion 1.0\n03/05/2021\nhieund", "Author", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemAuthorActionPerformed

    private void jButtonChuyenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonChuyenKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonChuyenKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManHinhChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ManHinhChinh().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonChuyen;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JComboBox<String> jComboBoxFrom;
    private javax.swing.JComboBox<String> jComboBoxTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenuAbout;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAuthor;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemFullScreen;
    private javax.swing.JMenuItem jMenuItemFullScreenExit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldNhap;
    private javax.swing.JTextField jTextFieldXuat;
    // End of variables declaration//GEN-END:variables
}
